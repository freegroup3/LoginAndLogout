<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="320" height="450"
		 initialize="init()">
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.events.SliderEvent;
			
			private var container:UIComponent;
			private var video:Video;
			private var cam:Camera;
			private var mic:Microphone;
			
			private var nc_Publisher:NetConnection;
			private var ns_Publisher:NetStream;
			private var nc_Receiver:NetConnection;
			private var ns_Receiver:NetStream;
			
			private var showlog:Boolean = true;
			private var st:SoundTransform;
			private function init():void
			{
//				傳出Stream的程式碼
				cam = Camera.getCamera();
				mic = Microphone.getMicrophone();
				st = new SoundTransform( 0.5, 0);
				
				nc_Publisher = new NetConnection();
				nc_Publisher.objectEncoding = ObjectEncoding.AMF0;
				nc_Publisher.connect("rtmp://fms.2be.com.tw/live");
				nc_Publisher.client = this;
				nc_Publisher.addEventListener( NetStatusEvent.NET_STATUS, publishStreamHandler);
				
//				播出來的程式碼
				container = new UIComponent();
				video = new Video(320,240);
				video.name = "videoPlayer";
				container.addChild(video);
				videoPlaceHolder.addElement(container);
				
				nc_Receiver = new NetConnection();
				nc_Receiver.objectEncoding = ObjectEncoding.AMF0;
				nc_Receiver.connect("rtmp://fms.2be.com.tw/live");
				nc_Receiver.client = this;
				nc_Receiver.addEventListener( NetStatusEvent.NET_STATUS, receiveStreamHandler);
//				控制音量的部分
				controlVolume.addEventListener(Event.CHANGE, controlSoundVolume);
			}
			private function publishStreamHandler(event:NetStatusEvent):void
			{
				trace("publishStream the event code is", event.info.code);
				ns_Publisher = new NetStream( nc_Publisher );
//				ns.addEventListener( NetStatusEvent.NET_STATUS, onNetStatusHandler);
				ns_Publisher.attachCamera( cam );
				ns_Publisher.attachAudio( mic );
				ns_Publisher.publish("ttttt", "live");
			}
			private function receiveStreamHandler( event:NetStatusEvent ):void
			{
				trace("receiveStreamHandler the event code is", event.info.code);
				ns_Receiver = new NetStream( nc_Receiver );
//				ns.addEventListener( NetStatusEvent.NET_STATUS, onNetStatusHandler );
				video.attachNetStream( ns_Receiver );
				ns_Receiver.play( "kkktt" );
			}
			private function closeCameraStream():void
			{
				ns_Publisher.attachCamera( null );
				video.attachNetStream( null );
				container.removeChild( video );
			}
			private function controlSoundVolume(event:SliderEvent):void
			{
				st.volume = event.value;
				ns_Receiver.soundTransform = st;
			}
			public function onBWDone(...rest):void
			{
				trace('onBWDone();'+ rest, rest.length);
				if (showlog == false) {
					return;
				}
				for (var i:int=0; i<rest.length; ++i) {
					trace("\t"+i+":"+rest[i]);
				}
			}
			public function onMetaData(info:Object):void
			{
				trace('onMetaData');
				if (showlog == false) {
					return;
				}
				for( var p:String in info)
				{
					trace(p, info[p]);
				}
			}
			public function onPlayStatus(info:Object):void
			{
				trace('onPlayStatus');
				if (showlog == false) {
					return;
				}
				for( var p:String in info)
				{
					trace('*', p, info[p]);
				}
			}
			public function onXMPData(...rest):void
			{
				if (showlog == false) {
					return;
				}
				trace('onXMPData:'+ rest, rest.length);
				for (var i:int=0; i<rest.length; ++i) {
					trace("\t"+i+":"+rest[i]);
				}
			}
		]]>
	</fx:Script>
	<s:BorderContainer backgroundColor="#000000" id="videoPlaceHolder" width="320" height="450"/>
	<s:Button id="stopCamera" label="關閉視訊" click="closeCameraStream()"/>
	<s:HSlider id="controlVolume" width="100"/>
</s:VGroup>